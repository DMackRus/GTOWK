#modelFile: "/mujoco_models/Franka_emika_scenes_V1/cylinder_pushing_heavyClutter.xml"
#modelName: "/push_mcl"
#timeStep: 0.004
#openloop_horizon: 1500
#mpc_horizon: 60
#keypointMethod: "set_interval"   # Possible values: "set_interval", "adaptive_jerk", "adaptive_accel", "iterative_error, "velocity_change"
#auto_adjust: false
#minN: 100
#maxN: 50
#iterativeErrorThreshold: 0.0001
#robots:
#  panda:
#    jointNames: ["panda0_joint1", "panda0_joint2", "panda0_joint3", "panda0_joint4", "panda0_joint5", "panda0_joint6", "panda0_joint7"]
#    actuatorNames: ["panda0_joint1", "panda0_joint2", "panda0_joint3", "panda0_joint4", "panda0_joint5", "panda0_joint6", "panda0_joint7"]
#    torqueControl: true
#    torqueLimits: [87, 87, 87, 87, 12, 12, 12]
#    startPos: [0, -0.183, 0, -3.1, 0, 1.34, 0]
#    goalPos: [0, 0, 0, 0, 0, 0, 0]
#    jointPosCosts: [0, 0, 0, 0, 0, 0, 0, 0]
##    jointVelCosts: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0]
#    jointVelCosts: [0, 0, 0, 0, 0, 0.1, 0]
#    terminalJointPosCosts: [ 0, 0, 0, 0, 0, 0, 0]
#    terminalJointVelCosts: [ 0, 0, 0, 0, 0, 0, 0]
#    jointControlCosts: [0, 0, 0, 0, 0, 0, 0, 0]
##    jointJerkThresholds: [0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005]
#    jointJerkThresholds: [1e-15, 1e-15, 1e-15, 1e-15, 1e-15, 1e-15, 1e-15]
#    magVelThresholds: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
#bodies:
#  goal:
#    activeLinearDOF: [true, true, true]
#    activeAngularDOF: [true, true, true]
#    startLinearPos: [0.4, 0.2, 0.0]
#    startAngularPos: [0, 0, 0]
#    goalLinearPos: [0.7, 0.4, 0.0]
#    goalAngularPos: [0, 0, 0]
#    linearPosCost: [ 0, 0, 0 ]
#    terminalLinearPosCost: [ 1000, 1000, 0 ]
#    linearVelCost: [ 0.1, 0.1, 0 ]
#    terminalLinearVelCost: [ 0, 0, 0 ]
#    angularPosCost: [ 0, 0, 0 ]
#    terminalAngularPosCost: [ 0, 0, 0 ]
#    angularVelCost: [ 0, 0, 0 ]
#    terminalAngularVelCost: [ 0, 0, 0 ]
##    linearJerkThreshold: [ 0.01, 0.01, 0.01 ]
#    linearJerkThreshold: [ 1e-15, 1e-15, 1e-15 ]
#    angularJerkThreshold: [ 0.01, 0.01, 0.01 ]
#    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#  obstacle_1:
#    activeLinearDOF: [true, true, true]
#    activeAngularDOF: [true, true, true]
#    startLinearPos: [0.65, 0.45, 0.0]
#    startAngularPos: [0, 0, 0]
#    goalLinearPos: [0.65, 0.45, 0.0]
#    goalAngularPos: [0, 0, 0]
#    linearPosCost: [0, 0, 0]
#    terminalLinearPosCost: [0, 0, 0]
#    linearVelCost: [0, 0, 0]
#    terminalLinearVelCost: [0, 0, 0]
#    angularPosCost: [0, 0, 0]
#    terminalAngularPosCost: [0, 0, 0]
#    angularVelCost: [0, 0, 0]
#    terminalAngularVelCost: [0, 0, 0]
#    linearJerkThreshold: [ 0.02, 0.02, 0.02  ]
#    angularJerkThreshold: [ 0.02, 0.02, 0.02  ]
#    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#  obstacle_2:
#    activeLinearDOF: [ true, true, true ]
#    activeAngularDOF: [ true, true, true ]
#    startLinearPos: [ 0.68, 0.3, 0.0 ]
#    startAngularPos: [ 0, 0, 0 ]
#    goalLinearPos: [ 0.68, 0.3, 0.0 ]
#    goalAngularPos: [ 0, 0, 0 ]
#    linearPosCost: [0, 0, 0]
#    terminalLinearPosCost: [0, 0, 0]
#    linearVelCost: [0, 0, 0]
#    terminalLinearVelCost: [0, 0, 0]
#    angularPosCost: [0, 0, 0]
#    terminalAngularPosCost: [0, 0, 0]
#    angularVelCost: [0, 0, 0]
#    terminalAngularVelCost: [0, 0, 0]
#    linearJerkThreshold: [ 0.02, 0.02, 0.02  ]
#    angularJerkThreshold: [ 0.02, 0.02, 0.02  ]
#    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#  obstacle_3:
#    activeLinearDOF: [ true, true, true ]
#    activeAngularDOF: [ true, true, true ]
#    startLinearPos: [ 0.68, 0.3, 0.2 ]
#    startAngularPos: [ 0, 0, 0 ]
#    goalLinearPos: [ 0.68, 0.3, 0.2 ]
#    goalAngularPos: [ 0, 0, 0 ]
#    linearPosCost: [0, 0, 0]
#    terminalLinearPosCost: [0, 0, 0]
#    linearVelCost: [0, 0, 0]
#    terminalLinearVelCost: [0, 0, 0]
#    angularPosCost: [0, 0, 0]
#    terminalAngularPosCost: [0, 0, 0]
#    angularVelCost: [0, 0, 0]
#    terminalAngularVelCost: [0, 0, 0]
#    linearJerkThreshold: [ 0.02, 0.02, 0.02  ]
#    angularJerkThreshold: [ 0.02, 0.02, 0.02  ]
#    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#  obstacle_4:
#    activeLinearDOF: [ true, true, true ]
#    activeAngularDOF: [ true, true, true ]
#    startLinearPos: [ 0.5, 0.2, 0.0 ]
#    startAngularPos: [ 0, 0, 0 ]
#    goalLinearPos: [ 0.5, 0.2, 0.0 ]
#    goalAngularPos: [ 0, 0, 0 ]
#    linearPosCost: [0, 0, 0]
#    terminalLinearPosCost: [0, 0, 0]
#    linearVelCost: [0, 0, 0]
#    terminalLinearVelCost: [0, 0, 0]
#    angularPosCost: [0, 0, 0]
#    terminalAngularPosCost: [0, 0, 0]
#    angularVelCost: [0, 0, 0]
#    terminalAngularVelCost: [0, 0, 0]
#    linearJerkThreshold: [ 0.02, 0.02, 0.02  ]
#    angularJerkThreshold: [ 0.02, 0.02, 0.02  ]
#    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#  obstacle_5:
#    activeLinearDOF: [ true, true, true ]
#    activeAngularDOF: [ true, true, true ]
#    startLinearPos: [ 0.55, 0.45, 0.0 ]
#    startAngularPos: [ 0, 0, 0 ]
#    goalLinearPos: [ 0.55, 0.45, 0.0 ]
#    goalAngularPos: [ 0, 0, 0 ]
#    linearPosCost: [0, 0, 0]
#    terminalLinearPosCost: [0, 0, 0]
#    linearVelCost: [0, 0, 0]
#    terminalLinearVelCost: [0, 0, 0]
#    angularPosCost: [0, 0, 0]
#    terminalAngularPosCost: [0, 0, 0]
#    angularVelCost: [0, 0, 0]
#    terminalAngularVelCost: [0, 0, 0]
#    linearJerkThreshold: [ 0.02, 0.02, 0.02  ]
#    angularJerkThreshold: [ 0.02, 0.02, 0.02  ]
#    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#  obstacle_6:
#    activeLinearDOF: [ true, true, true ]
#    activeAngularDOF: [ true, true, true ]
#    startLinearPos: [ 0.6, 0.15, 0.0 ]
#    startAngularPos: [ 0, 0, 0 ]
#    goalLinearPos: [ 0.6, 0.15, 0.0 ]
#    goalAngularPos: [ 0, 0, 0 ]
#    linearPosCost: [0, 0, 0]
#    terminalLinearPosCost: [0, 0, 0]
#    linearVelCost: [0, 0, 0]
#    terminalLinearVelCost: [0, 0, 0]
#    angularPosCost: [0, 0, 0]
#    terminalAngularPosCost: [0, 0, 0]
#    angularVelCost: [0, 0, 0]
#    terminalAngularVelCost: [0, 0, 0]
#    linearJerkThreshold: [ 0.02, 0.02, 0.02  ]
#    angularJerkThreshold: [ 0.02, 0.02, 0.02  ]
#    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#  obstacle_7:
#    activeLinearDOF: [ true, true, true ]
#    activeAngularDOF: [ true, true, true ]
#    startLinearPos: [ 0.75, 0.5, 0.0 ]
#    startAngularPos: [ 0, 0, 0 ]
#    goalLinearPos: [ 0.5, 0.5, 0.0 ]
#    goalAngularPos: [ 0, 0, 0 ]
#    linearPosCost: [0, 0, 0]
#    terminalLinearPosCost: [0, 0, 0]
#    linearVelCost: [0, 0, 0]
#    terminalLinearVelCost: [0, 0, 0]
#    angularPosCost: [0, 0, 0]
#    terminalAngularPosCost: [0, 0, 0]
#    angularVelCost: [0, 0, 0]
#    terminalAngularVelCost: [0, 0, 0]
#    linearJerkThreshold: [ 0.02, 0.02, 0.02 ]
#    angularJerkThreshold: [ 0.02, 0.02, 0.02 ]
#    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]

modelFile: "/mujoco_models/Franka_emika_scenes_V1/cylinder_pushing_heavyClutter.xml"
modelName: "/push_mcl"
timeStep: 0.004
openloop_horizon: 2000
mpc_horizon: 80
keypointMethod: "set_interval"   # Possible values: "set_interval", "adaptive_jerk", "adaptive_accel", "iterative_error, "velocity_change"
auto_adjust: false
minN: 1
maxN: 50
iterativeErrorThreshold: 0.0001
robots:
  panda:
    jointNames: ["panda0_joint1", "panda0_joint2", "panda0_joint3", "panda0_joint4", "panda0_joint5", "panda0_joint6", "panda0_joint7"]
    actuatorNames: ["panda0_joint1", "panda0_joint2", "panda0_joint3", "panda0_joint4", "panda0_joint5", "panda0_joint6", "panda0_joint7"]
    torqueControl: true
    torqueLimits: [87, 87, 87, 87, 12, 12, 12]
    startPos: [0, -0.183, 0, -3.1, 0, 1.34, 0]
    goalPos: [0, 0, 0, 0, 0, 0, 0]
    jointPosCosts: [0, 0, 0, 0, 0, 0, 0, 0]
    jointVelCosts: [0.1, 0.1, 0.1, 0.01, 0, 0.1, 0]
#    jointVelCosts: [0, 0, 0, 0, 0, 0.1, 0]
    terminalJointPosCosts: [ 0, 0, 0, 0, 0, 0, 0 ]
    terminalJointVelCosts: [ 0, 0, 0, 0, 0, 0, 0 ]
    jointControlCosts: [0, 0, 0, 0, 0, 0, 0, 0]
    #    jointJerkThresholds: [0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005]
    jointJerkThresholds: [1e-15, 1e-15, 1e-15, 1e-15, 1e-15, 1e-15, 1e-15]
    magVelThresholds: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
bodies:
  goal:
    activeLinearDOF: [true, true, true]
    activeAngularDOF: [false, false, false]
    startLinearPos: [0.4, 0.2, 0.0]
    startAngularPos: [0, 0, 0]
    goalLinearPos: [0.6, 0.3, 0.0]
    goalAngularPos: [0, 0, 0]
    linearPosCost: [ 0, 0, 0 ]
#    linearPosCost: [ 0, 0, 0 ]
    terminalLinearPosCost: [ 1000, 1000, 0 ]
    linearVelCost: [ 1.5, 1.5, 0 ]
    terminalLinearVelCost: [ 0, 0, 0 ]
    angularPosCost: [ 0, 0, 0 ]
    terminalAngularPosCost: [ 0, 0, 0 ]
    angularVelCost: [ 0, 0, 0 ]
    terminalAngularVelCost: [ 0, 0, 0 ]
    #    linearJerkThreshold: [ 0.01, 0.01, 0.01 ]
    linearJerkThreshold: [ 1e-15, 1e-15, 1e-15 ]
    angularJerkThreshold: [ 0.01, 0.01, 0.01 ]
    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
  obstacle_1:
    activeLinearDOF: [true, true, true]
    activeAngularDOF: [false, false, false]
    startLinearPos: [0.65, 0.45, 0.0]
    startAngularPos: [0, 0, 0]
    goalLinearPos: [0.65, 0.45, 0.0]
    goalAngularPos: [0, 0, 0]
    linearPosCost: [0, 0, 0]
    terminalLinearPosCost: [10, 10, 0]
    linearVelCost: [0, 0, 0]
    terminalLinearVelCost: [0, 0, 0]
    angularPosCost: [0, 0, 0]
    terminalAngularPosCost: [0, 0, 0]
    angularVelCost: [0, 0, 0]
    terminalAngularVelCost: [0, 0, 0]
    linearJerkThreshold: [ 0.02, 0.02, 0.02  ]
    angularJerkThreshold: [ 0.02, 0.02, 0.02  ]
    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
  obstacle_2:
    activeLinearDOF: [ true, true, true ]
    activeAngularDOF: [ false, false, false ]
    startLinearPos: [ 0.68, 0.3, 0.0 ]
    startAngularPos: [ 0, 0, 0 ]
    goalLinearPos: [ 0.68, 0.3, 0.0 ]
    goalAngularPos: [ 0, 0, 0 ]
    linearPosCost: [0, 0, 0]
    terminalLinearPosCost: [10, 10, 0]
    linearVelCost: [0, 0, 0]
    terminalLinearVelCost: [0, 0, 0]
    angularPosCost: [0, 0, 0]
    terminalAngularPosCost: [0, 0, 0]
    angularVelCost: [0, 0, 0]
    terminalAngularVelCost: [0, 0, 0]
    linearJerkThreshold: [ 0.02, 0.02, 0.02  ]
    angularJerkThreshold: [ 0.02, 0.02, 0.02  ]
    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
  obstacle_3:
    activeLinearDOF: [ true, true, true ]
    activeAngularDOF: [ false, false, false ]
    startLinearPos: [ 0.68, 0.3, 0.2 ]
    startAngularPos: [ 0, 0, 0 ]
    goalLinearPos: [ 0.68, 0.3, 0.2 ]
    goalAngularPos: [ 0, 0, 0 ]
    linearPosCost: [0, 0, 0]
    terminalLinearPosCost: [10, 10, 0]
    linearVelCost: [0, 0, 0]
    terminalLinearVelCost: [0, 0, 0]
    angularPosCost: [0, 0, 0]
    terminalAngularPosCost: [0, 0, 0]
    angularVelCost: [0, 0, 0]
    terminalAngularVelCost: [0, 0, 0]
    linearJerkThreshold: [ 0.02, 0.02, 0.02  ]
    angularJerkThreshold: [ 0.02, 0.02, 0.02  ]
    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
  obstacle_4:
    activeLinearDOF: [ true, true, true ]
    activeAngularDOF: [ false, false, false ]
    startLinearPos: [ 0.5, 0.2, 0.0 ]
    startAngularPos: [ 0, 0, 0 ]
    goalLinearPos: [ 0.5, 0.2, 0.0 ]
    goalAngularPos: [ 0, 0, 0 ]
    linearPosCost: [0, 0, 0]
    terminalLinearPosCost: [10, 10, 0]
    linearVelCost: [0, 0, 0]
    terminalLinearVelCost: [0, 0, 0]
    angularPosCost: [0, 0, 0]
    terminalAngularPosCost: [0, 0, 0]
    angularVelCost: [0, 0, 0]
    terminalAngularVelCost: [0, 0, 0]
    linearJerkThreshold: [ 0.02, 0.02, 0.02  ]
    angularJerkThreshold: [ 0.02, 0.02, 0.02  ]
    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
  obstacle_5:
    activeLinearDOF: [ true, true, true ]
    activeAngularDOF: [ false, false, false ]
    startLinearPos: [ 0.55, 0.45, 0.0 ]
    startAngularPos: [ 0, 0, 0 ]
    goalLinearPos: [ 0.55, 0.45, 0.0 ]
    goalAngularPos: [ 0, 0, 0 ]
    linearPosCost: [0, 0, 0]
    terminalLinearPosCost: [10, 10, 0]
    linearVelCost: [0, 0, 0]
    terminalLinearVelCost: [0, 0, 0]
    angularPosCost: [0, 0, 0]
    terminalAngularPosCost: [0, 0, 0]
    angularVelCost: [0, 0, 0]
    terminalAngularVelCost: [0, 0, 0]
    linearJerkThreshold: [ 0.02, 0.02, 0.02  ]
    angularJerkThreshold: [ 0.02, 0.02, 0.02  ]
    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
  obstacle_6:
    activeLinearDOF: [ true, true, true ]
    activeAngularDOF: [ false, false, false ]
    startLinearPos: [ 0.6, 0.15, 0.0 ]
    startAngularPos: [ 0, 0, 0 ]
    goalLinearPos: [ 0.6, 0.15, 0.0 ]
    goalAngularPos: [ 0, 0, 0 ]
    linearPosCost: [0, 0, 0]
    terminalLinearPosCost: [10, 10, 0]
    linearVelCost: [0, 0, 0]
    terminalLinearVelCost: [0, 0, 0]
    angularPosCost: [0, 0, 0]
    terminalAngularPosCost: [0, 0, 0]
    angularVelCost: [0, 0, 0]
    terminalAngularVelCost: [0, 0, 0]
    linearJerkThreshold: [ 0.02, 0.02, 0.02 ]
    angularJerkThreshold: [ 0.02, 0.02, 0.02 ]
    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
  obstacle_7:
    activeLinearDOF: [ true, true, true ]
    activeAngularDOF: [ false, false, false ]
    startLinearPos: [ 0.75, 0.5, 0.0 ]
    startAngularPos: [ 0, 0, 0 ]
    goalLinearPos: [ 0.5, 0.5, 0.0 ]
    goalAngularPos: [ 0, 0, 0 ]
    linearPosCost: [0, 0, 0]
    terminalLinearPosCost: [10, 10, 0]
    linearVelCost: [0, 0, 0]
    terminalLinearVelCost: [0, 0, 0]
    angularPosCost: [0, 0, 0]
    terminalAngularPosCost: [0, 0, 0]
    angularVelCost: [0, 0, 0]
    terminalAngularVelCost: [0, 0, 0]
    linearJerkThreshold: [ 0.02, 0.02, 0.02 ]
    angularJerkThreshold: [ 0.02, 0.02, 0.02 ]
    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#  obstacle_8:
#    activeLinearDOF: [ true, true, true ]
#    activeAngularDOF: [ false, false, false ]
#    startLinearPos: [ 1.6, 0.5, 0.0 ]
#    startAngularPos: [ 0, 0, 0 ]
#    goalLinearPos: [ 0.5, 0.5, 0.0 ]
#    goalAngularPos: [ 0, 0, 0 ]
#    linearPosCost: [ 0, 0, 0 ]
#    terminalLinearPosCost: [ 0, 0, 0 ]
#    linearVelCost: [ 0, 0, 0 ]
#    terminalLinearVelCost: [ 0, 0, 0 ]
#    angularPosCost: [ 0, 0, 0 ]
#    terminalAngularPosCost: [ 0, 0, 0 ]
#    angularVelCost: [ 0, 0, 0 ]
#    terminalAngularVelCost: [ 0, 0, 0 ]
#    linearJerkThreshold: [ 0.02, 0.02, 0.02 ]
#    angularJerkThreshold: [ 0.02, 0.02, 0.02 ]
#    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#  obstacle_9:
#    activeLinearDOF: [ true, true, true ]
#    activeAngularDOF: [ false, false, false ]
#    startLinearPos: [ 1.4, 0.5, 0.0 ]
#    startAngularPos: [ 0, 0, 0 ]
#    goalLinearPos: [ 0.5, 0.5, 0.0 ]
#    goalAngularPos: [ 0, 0, 0 ]
#    linearPosCost: [ 0, 0, 0 ]
#    terminalLinearPosCost: [ 0, 0, 0 ]
#    linearVelCost: [ 0, 0, 0 ]
#    terminalLinearVelCost: [ 0, 0, 0 ]
#    angularPosCost: [ 0, 0, 0 ]
#    terminalAngularPosCost: [ 0, 0, 0 ]
#    angularVelCost: [ 0, 0, 0 ]
#    terminalAngularVelCost: [ 0, 0, 0 ]
#    linearJerkThreshold: [ 0.02, 0.02, 0.02 ]
#    angularJerkThreshold: [ 0.02, 0.02, 0.02 ]
#    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#  obstacle_10:
#    activeLinearDOF: [ true, true, true ]
#    activeAngularDOF: [ false, false, false ]
#    startLinearPos: [ 1.2, 0.5, 0.0 ]
#    startAngularPos: [ 0, 0, 0 ]
#    goalLinearPos: [ 0.5, 0.5, 0.0 ]
#    goalAngularPos: [ 0, 0, 0 ]
#    linearPosCost: [ 0, 0, 0 ]
#    terminalLinearPosCost: [ 0, 0, 0 ]
#    linearVelCost: [ 0, 0, 0 ]
#    terminalLinearVelCost: [ 0, 0, 0 ]
#    angularPosCost: [ 0, 0, 0 ]
#    terminalAngularPosCost: [ 0, 0, 0 ]
#    angularVelCost: [ 0, 0, 0 ]
#    terminalAngularVelCost: [ 0, 0, 0 ]
#    linearJerkThreshold: [ 0.02, 0.02, 0.02 ]
#    angularJerkThreshold: [ 0.02, 0.02, 0.02 ]
#    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
#    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
