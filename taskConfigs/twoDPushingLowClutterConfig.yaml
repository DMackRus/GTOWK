modelFile: "/mujoco_models/Franka_emika_scenes_V1/cylinder_pushing_lowClutter.xml"
modelName: "/push_mCl"
timeStep: 0.004
keypointMethod: "adaptive_jerk"   # Possible values: "set_interval", "adaptive_jerk", "adaptive_accel", "iterative_error, "velocity_change"
minN: 1
maxN: 50
iterativeErrorThreshold: 0.0001
robots:
  panda:
    jointNames: ["panda0_joint1", "panda0_joint2", "panda0_joint3", "panda0_joint4", "panda0_joint5", "panda0_joint6", "panda0_joint7"]
    actuatorNames: ["panda0_joint1", "panda0_joint2", "panda0_joint3", "panda0_joint4", "panda0_joint5", "panda0_joint6", "panda0_joint7"]
    torqueControl: true
    torqueLimits: [87, 87, 87, 87, 12, 12, 12]
    startPos: [0, -0.183, 0, -3.1, 0, 1.34, 0]
    goalPos: [0, 0, 0, 0, 0, 0, 0]
    jointPosCosts: [0, 0, 0, 0, 0, 0, 0]
    jointVelCosts: [0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0]
    terminalJointPosCosts: [ 0, 0, 0, 0, 0, 0, 0 ]
    terminalJointVelCosts: [ 0, 0, 0, 0, 0, 0, 0 ]
    jointControlCosts: [0, 0, 0, 0, 0, 0, 0]
    jointJerkThresholds: [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
    magVelThresholds: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
bodies:
  blueTin:
    activeLinearDOF: [true, true, false]
    activeAngularDOF: [false, false, false]
    startLinearPos: [0.4, 0.2, 0.0]
    startAngularPos: [0, 0, 0]
    goalLinearPos: [0.6, 0.4, 0.0]
    goalAngularPos: [0, 0, 0]
    linearPosCost: [ 0, 0, 0 ]
    terminalLinearPosCost: [ 100, 100, 0 ]
    linearVelCost: [ 1, 1, 0 ]
    terminalLinearVelCost: [ 0, 0, 0 ]
    angularPosCost: [ 0, 0, 0 ]
    terminalAngularPosCost: [ 0, 0, 0 ]
    angularVelCost: [ 0, 0, 0 ]
    terminalAngularVelCost: [ 0, 0, 0 ]
    linearJerkThreshold: [ 0.01, 0.01, 0.01 ]
    angularJerkThreshold: [ 0.01, 0.01, 0.01 ]
    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
  bigBox:
    activeLinearDOF: [true, true, false]
    activeAngularDOF: [false, false, false]
    startLinearPos: [0.48, 0.3, 0.0]
    startAngularPos: [0, 0, 0]
    goalLinearPos: [0.48, 0.3, 0.0]
    goalAngularPos: [0, 0, 0]
    linearPosCost: [0, 0, 0]
    terminalLinearPosCost: [0, 0, 0]
    linearVelCost: [0, 0, 0]
    terminalLinearVelCost: [0, 0, 0]
    angularPosCost: [0, 0, 0]
    terminalAngularPosCost: [0, 0, 0]
    angularVelCost: [0, 0, 0]
    terminalAngularVelCost: [0, 0, 0]
    linearJerkThreshold: [ 0.02, 0.02, 0.02 ]
    angularJerkThreshold: [ 0.02, 0.02, 0.02  ]
    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
  tallCylinder:
    activeLinearDOF: [ true, true, false ]
    activeAngularDOF: [ false, false, false ]
    startLinearPos: [ 0.6, 0.4, 0.0 ]
    startAngularPos: [ 0, 0, 0 ]
    goalLinearPos: [ 0.6, 0.4, 0.0 ]
    goalAngularPos: [ 0, 0, 0 ]
    linearPosCost: [ 0, 0, 0 ]
    terminalLinearPosCost: [ 0, 0, 0 ]
    linearVelCost: [ 0, 0, 0 ]
    terminalLinearVelCost: [ 0, 0, 0 ]
    angularPosCost: [ 0, 0, 0 ]
    terminalAngularPosCost: [ 0, 0, 0 ]
    angularVelCost: [ 0, 0, 0 ]
    terminalAngularVelCost: [ 0, 0, 0 ]
    linearJerkThreshold: [ 0.02, 0.02, 0.02  ]
    angularJerkThreshold: [ 0.02, 0.02, 0.02  ]
    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]
  smallBox:
    activeLinearDOF: [ true, true, false ]
    activeAngularDOF: [ false, false, false ]
    startLinearPos: [ 0.7, 0.3, 0.0 ]
    startAngularPos: [ 0, 0, 0 ]
    goalLinearPos: [ 0.7, 0.3, 0.0 ]
    goalAngularPos: [ 0, 0, 0 ]
    linearPosCost: [ 0, 0, 0 ]
    terminalLinearPosCost: [ 0, 0, 0 ]
    linearVelCost: [ 0, 0, 0 ]
    terminalLinearVelCost: [ 0, 0, 0 ]
    angularPosCost: [ 0, 0, 0 ]
    terminalAngularPosCost: [ 0, 0, 0 ]
    angularVelCost: [ 0, 0, 0 ]
    terminalAngularVelCost: [ 0, 0, 0 ]
    linearJerkThreshold: [ 0.02, 0.02, 0.02  ]
    angularJerkThreshold: [ 0.02, 0.02, 0.02  ]
    linearMagVelThreshold: [ 0.1, 0.1, 0.1 ]
    angularMagVelThreshold: [ 0.1, 0.1, 0.1 ]